# Generated by Django 5.2.7 on 2025-10-20 22:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_rol', models.CharField(choices=[('administrador', 'administrador'), ('madre_comunitaria', 'madre_comunitaria'), ('padre', 'padre')], max_length=30, unique=True)),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('documento', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('nombres', models.CharField(max_length=50)),
                ('apellidos', models.CharField(max_length=50)),
                ('correo', models.EmailField(max_length=100, unique=True)),
                ('direccion', models.CharField(blank=True, max_length=100, null=True)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('rol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.rol')),
            ],
            options={
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HogarComunitario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_hogar', models.CharField(max_length=100)),
                ('direccion', models.CharField(max_length=150)),
                ('localidad', models.CharField(blank=True, max_length=50, null=True)),
                ('capacidad_maxima', models.IntegerField()),
                ('estado', models.CharField(choices=[('activo', 'activo'), ('inactivo', 'inactivo'), ('en_mantenimiento', 'en_mantenimiento')], default='activo', max_length=20)),
                ('madre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='hogares_asignados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hogares_comunitarios',
            },
        ),
        migrations.CreateModel(
            name='Padre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ocupacion', models.CharField(blank=True, max_length=50, null=True)),
                ('estrato', models.IntegerField(blank=True, null=True)),
                ('telefono_contacto_emergencia', models.CharField(blank=True, max_length=20, null=True)),
                ('nombre_contacto_emergencia', models.CharField(blank=True, max_length=100, null=True)),
                ('situacion_economica_hogar', models.CharField(blank=True, max_length=100, null=True)),
                ('documento_identidad_img', models.CharField(blank=True, max_length=255, null=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='padre_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'padres',
            },
        ),
        migrations.CreateModel(
            name='Nino',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=50)),
                ('apellidos', models.CharField(max_length=50)),
                ('fecha_nacimiento', models.DateField()),
                ('documento', models.BigIntegerField(blank=True, null=True)),
                ('genero', models.CharField(blank=True, choices=[('masculino', 'masculino'), ('femenino', 'femenino'), ('otro', 'otro'), ('no_especificado', 'no_especificado')], max_length=20, null=True)),
                ('nacionalidad', models.CharField(blank=True, max_length=50, null=True)),
                ('fecha_ingreso', models.DateField(blank=True, null=True)),
                ('foto', models.CharField(blank=True, max_length=255, null=True)),
                ('carnet_vacunacion', models.CharField(blank=True, max_length=255, null=True)),
                ('certificado_eps', models.CharField(blank=True, max_length=255, null=True)),
                ('hogar', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ninos', to='core.hogarcomunitario')),
                ('padre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ninos', to='core.padre')),
            ],
            options={
                'db_table': 'ninos',
            },
        ),
        migrations.CreateModel(
            name='Planeacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('nombre_actividad', models.CharField(max_length=150)),
                ('intencionalidad_pedagogica', models.TextField()),
                ('materiales_utilizar', models.TextField(blank=True, null=True)),
                ('ambientacion', models.TextField(blank=True, null=True)),
                ('actividad_inicio', models.TextField(blank=True, null=True)),
                ('desarrollo', models.TextField(blank=True, null=True)),
                ('cierre', models.TextField(blank=True, null=True)),
                ('documentacion', models.TextField(blank=True, null=True)),
                ('observacion', models.TextField(blank=True, null=True)),
                ('hogar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planeaciones', to='core.hogarcomunitario')),
            ],
            options={
                'db_table': 'planeaciones',
            },
        ),
        migrations.CreateModel(
            name='DesarrolloNino',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_fin_mes', models.DateField()),
                ('dimension_cognitiva', models.TextField(blank=True, null=True)),
                ('dimension_comunicativa', models.TextField(blank=True, null=True)),
                ('dimension_socio_afectiva', models.TextField(blank=True, null=True)),
                ('dimension_corporal', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('nino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='desarrollos', to='core.nino')),
            ],
            options={
                'db_table': 'desarrollo_nino',
                'unique_together': {('nino', 'fecha_fin_mes')},
            },
        ),
        migrations.CreateModel(
            name='Asistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('estado', models.CharField(choices=[('Presente', 'Presente'), ('Ausente', 'Ausente'), ('Justificado', 'Justificado')], max_length=20)),
                ('nino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asistencias', to='core.nino')),
            ],
            options={
                'db_table': 'asistencia',
                'indexes': [models.Index(fields=['nino'], name='asistencia_nino_id_c8975f_idx')],
            },
        ),
    ]
